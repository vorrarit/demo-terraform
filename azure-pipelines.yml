# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

stages:
- stage: Plan
  displayName: 'Terraform Plan'
  jobs:
  - job: TerraformPlan
    displayName: 'Terraform Plan'
    steps:
    - script: |
        terraform --version
        terraform init
        terraform plan -out=tfplan
      displayName: 'Terraform Init and Plan'
      env:
        TF_TOKEN_app_terraform_io: $(tfToken)
        HW_ACCESS_KEY: $(accessKey)
        HW_SECRET_KEY: $(secretKey)
        HW_REGION_NAME: $(region)
    - publish: $(System.DefaultWorkingDirectory)/tfplan  # Publish the plan file
      artifact: tfplan
- stage: Deploy
  displayName: 'Terraform Apply'
  dependsOn: Plan
  condition: succeeded()
  jobs:
  - job: TerraformApply
    displayName: 'Terraform Apply'
    steps:
    - download: current
      artifact: tfplan  # Download the plan file published earlier
    - script: |
        terraform --version
        terraform init
        terraform apply $(Pipeline.Workspace)/tfplan/tfplan
      displayName: 'Terraform Init and Apply'
      env:
        TF_TOKEN_app_terraform_io: $(tfToken)
        HW_ACCESS_KEY: $(accessKey)
        HW_SECRET_KEY: $(secretKey)
        HW_REGION_NAME: $(region)
